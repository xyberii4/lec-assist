/*
TwelveLabs Video Understanding API

Use the TwelveLabs Video Understanding API to extract information from your videos and make it available to your applications. The API is organized around REST and returns responses in the JSON format. It is compatible with most programming languages, and you can also use Postman or other REST clients to send requests and view responses. 

API version: 1.3.0
Contact: support@twelvelabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twelvelabs

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateIndexRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIndexRequest{}

// CreateIndexRequest struct for CreateIndexRequest
type CreateIndexRequest struct {
	// The name of the index. Make sure you use a succinct and descriptive name. 
	IndexName string `json:"index_name"`
	// An array that specifies the [video understanding models](/v1.3/docs/concepts/models) and the [model options](/v1.3/docs/concepts/modalities#model-options) to be enabled for this index. This determines how the platform processes your videos. 
	Models []CreateIndexRequestModelsInner `json:"models"`
	// An array specifying which add-ons should be enabled. Each entry in the array is an addon, and the following values are supported: - `thumbnail`: Enables thumbnail generation.  If you don't provide this parameter, no add-ons will be enabled.  <Note title=\"Notes\"> - You can only enable addons when using the Marengo video understanding model. - You cannot disable an add-on once the index has been created. </Note> 
	Addons []string `json:"addons,omitempty"`
}

type _CreateIndexRequest CreateIndexRequest

// NewCreateIndexRequest instantiates a new CreateIndexRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIndexRequest(indexName string, models []CreateIndexRequestModelsInner) *CreateIndexRequest {
	this := CreateIndexRequest{}
	this.IndexName = indexName
	this.Models = models
	return &this
}

// NewCreateIndexRequestWithDefaults instantiates a new CreateIndexRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIndexRequestWithDefaults() *CreateIndexRequest {
	this := CreateIndexRequest{}
	return &this
}

// GetIndexName returns the IndexName field value
func (o *CreateIndexRequest) GetIndexName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IndexName
}

// GetIndexNameOk returns a tuple with the IndexName field value
// and a boolean to check if the value has been set.
func (o *CreateIndexRequest) GetIndexNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexName, true
}

// SetIndexName sets field value
func (o *CreateIndexRequest) SetIndexName(v string) {
	o.IndexName = v
}

// GetModels returns the Models field value
func (o *CreateIndexRequest) GetModels() []CreateIndexRequestModelsInner {
	if o == nil {
		var ret []CreateIndexRequestModelsInner
		return ret
	}

	return o.Models
}

// GetModelsOk returns a tuple with the Models field value
// and a boolean to check if the value has been set.
func (o *CreateIndexRequest) GetModelsOk() ([]CreateIndexRequestModelsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Models, true
}

// SetModels sets field value
func (o *CreateIndexRequest) SetModels(v []CreateIndexRequestModelsInner) {
	o.Models = v
}

// GetAddons returns the Addons field value if set, zero value otherwise.
func (o *CreateIndexRequest) GetAddons() []string {
	if o == nil || IsNil(o.Addons) {
		var ret []string
		return ret
	}
	return o.Addons
}

// GetAddonsOk returns a tuple with the Addons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIndexRequest) GetAddonsOk() ([]string, bool) {
	if o == nil || IsNil(o.Addons) {
		return nil, false
	}
	return o.Addons, true
}

// HasAddons returns a boolean if a field has been set.
func (o *CreateIndexRequest) HasAddons() bool {
	if o != nil && !IsNil(o.Addons) {
		return true
	}

	return false
}

// SetAddons gets a reference to the given []string and assigns it to the Addons field.
func (o *CreateIndexRequest) SetAddons(v []string) {
	o.Addons = v
}

func (o CreateIndexRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIndexRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["index_name"] = o.IndexName
	toSerialize["models"] = o.Models
	if !IsNil(o.Addons) {
		toSerialize["addons"] = o.Addons
	}
	return toSerialize, nil
}

func (o *CreateIndexRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"index_name",
		"models",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIndexRequest := _CreateIndexRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIndexRequest)

	if err != nil {
		return err
	}

	*o = CreateIndexRequest(varCreateIndexRequest)

	return err
}

type NullableCreateIndexRequest struct {
	value *CreateIndexRequest
	isSet bool
}

func (v NullableCreateIndexRequest) Get() *CreateIndexRequest {
	return v.value
}

func (v *NullableCreateIndexRequest) Set(val *CreateIndexRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIndexRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIndexRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIndexRequest(val *CreateIndexRequest) *NullableCreateIndexRequest {
	return &NullableCreateIndexRequest{value: val, isSet: true}
}

func (v NullableCreateIndexRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIndexRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


