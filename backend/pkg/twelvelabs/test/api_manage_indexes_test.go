/*
TwelveLabs Video Understanding API

Testing ManageIndexesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package twelvelabs

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/xyberii4/lec-assist/backend/pkg/twelvelabs"
)

func Test_twelvelabs_ManageIndexesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ManageIndexesAPIService CreateIndex", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ManageIndexesAPI.CreateIndex(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ManageIndexesAPIService DeleteIndex", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var indexId string

		httpRes, err := apiClient.ManageIndexesAPI.DeleteIndex(context.Background(), indexId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ManageIndexesAPIService ListIndexes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ManageIndexesAPI.ListIndexes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ManageIndexesAPIService RetrieveIndex", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var indexId string

		resp, httpRes, err := apiClient.ManageIndexesAPI.RetrieveIndex(context.Background(), indexId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ManageIndexesAPIService UpdateIndex", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var indexId string

		httpRes, err := apiClient.ManageIndexesAPI.UpdateIndex(context.Background(), indexId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
