/*
TwelveLabs Video Understanding API

Use the TwelveLabs Video Understanding API to extract information from your videos and make it available to your applications. The API is organized around REST and returns responses in the JSON format. It is compatible with most programming languages, and you can also use Postman or other REST clients to send requests and view responses. 

API version: 1.3.0
Contact: support@twelvelabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twelvelabs

import (
	"encoding/json"
)

// checks if the InlineObject4SystemMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineObject4SystemMetadata{}

// InlineObject4SystemMetadata System-generated metadata about the video.
type InlineObject4SystemMetadata struct {
	Duration *float32 `json:"duration,omitempty"`
	Filename *string `json:"filename,omitempty"`
	Fps *float32 `json:"fps,omitempty"`
	Height *int32 `json:"height,omitempty"`
	Width *int32 `json:"width,omitempty"`
}

// NewInlineObject4SystemMetadata instantiates a new InlineObject4SystemMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject4SystemMetadata() *InlineObject4SystemMetadata {
	this := InlineObject4SystemMetadata{}
	return &this
}

// NewInlineObject4SystemMetadataWithDefaults instantiates a new InlineObject4SystemMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject4SystemMetadataWithDefaults() *InlineObject4SystemMetadata {
	this := InlineObject4SystemMetadata{}
	return &this
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *InlineObject4SystemMetadata) GetDuration() float32 {
	if o == nil || IsNil(o.Duration) {
		var ret float32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject4SystemMetadata) GetDurationOk() (*float32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *InlineObject4SystemMetadata) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float32 and assigns it to the Duration field.
func (o *InlineObject4SystemMetadata) SetDuration(v float32) {
	o.Duration = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *InlineObject4SystemMetadata) GetFilename() string {
	if o == nil || IsNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject4SystemMetadata) GetFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *InlineObject4SystemMetadata) HasFilename() bool {
	if o != nil && !IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *InlineObject4SystemMetadata) SetFilename(v string) {
	o.Filename = &v
}

// GetFps returns the Fps field value if set, zero value otherwise.
func (o *InlineObject4SystemMetadata) GetFps() float32 {
	if o == nil || IsNil(o.Fps) {
		var ret float32
		return ret
	}
	return *o.Fps
}

// GetFpsOk returns a tuple with the Fps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject4SystemMetadata) GetFpsOk() (*float32, bool) {
	if o == nil || IsNil(o.Fps) {
		return nil, false
	}
	return o.Fps, true
}

// HasFps returns a boolean if a field has been set.
func (o *InlineObject4SystemMetadata) HasFps() bool {
	if o != nil && !IsNil(o.Fps) {
		return true
	}

	return false
}

// SetFps gets a reference to the given float32 and assigns it to the Fps field.
func (o *InlineObject4SystemMetadata) SetFps(v float32) {
	o.Fps = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *InlineObject4SystemMetadata) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject4SystemMetadata) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *InlineObject4SystemMetadata) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *InlineObject4SystemMetadata) SetHeight(v int32) {
	o.Height = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *InlineObject4SystemMetadata) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject4SystemMetadata) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *InlineObject4SystemMetadata) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *InlineObject4SystemMetadata) SetWidth(v int32) {
	o.Width = &v
}

func (o InlineObject4SystemMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineObject4SystemMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	if !IsNil(o.Fps) {
		toSerialize["fps"] = o.Fps
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	return toSerialize, nil
}

type NullableInlineObject4SystemMetadata struct {
	value *InlineObject4SystemMetadata
	isSet bool
}

func (v NullableInlineObject4SystemMetadata) Get() *InlineObject4SystemMetadata {
	return v.value
}

func (v *NullableInlineObject4SystemMetadata) Set(val *InlineObject4SystemMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject4SystemMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject4SystemMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject4SystemMetadata(val *InlineObject4SystemMetadata) *NullableInlineObject4SystemMetadata {
	return &NullableInlineObject4SystemMetadata{value: val, isSet: true}
}

func (v NullableInlineObject4SystemMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject4SystemMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


