/*
TwelveLabs Video Understanding API

Use the TwelveLabs Video Understanding API to extract information from your videos and make it available to your applications. The API is organized around REST and returns responses in the JSON format. It is compatible with most programming languages, and you can also use Postman or other REST clients to send requests and view responses. 

API version: 1.3.0
Contact: support@twelvelabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twelvelabs

import (
	"encoding/json"
)

// checks if the InlineObject4EmbeddingVideoEmbedding type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineObject4EmbeddingVideoEmbedding{}

// InlineObject4EmbeddingVideoEmbedding An object that contains the embeddings. 
type InlineObject4EmbeddingVideoEmbedding struct {
	// An array of objects that contains the embeddings for each individual segment.
	Segments []VideoSegment `json:"segments,omitempty"`
}

// NewInlineObject4EmbeddingVideoEmbedding instantiates a new InlineObject4EmbeddingVideoEmbedding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject4EmbeddingVideoEmbedding() *InlineObject4EmbeddingVideoEmbedding {
	this := InlineObject4EmbeddingVideoEmbedding{}
	return &this
}

// NewInlineObject4EmbeddingVideoEmbeddingWithDefaults instantiates a new InlineObject4EmbeddingVideoEmbedding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject4EmbeddingVideoEmbeddingWithDefaults() *InlineObject4EmbeddingVideoEmbedding {
	this := InlineObject4EmbeddingVideoEmbedding{}
	return &this
}

// GetSegments returns the Segments field value if set, zero value otherwise.
func (o *InlineObject4EmbeddingVideoEmbedding) GetSegments() []VideoSegment {
	if o == nil || IsNil(o.Segments) {
		var ret []VideoSegment
		return ret
	}
	return o.Segments
}

// GetSegmentsOk returns a tuple with the Segments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject4EmbeddingVideoEmbedding) GetSegmentsOk() ([]VideoSegment, bool) {
	if o == nil || IsNil(o.Segments) {
		return nil, false
	}
	return o.Segments, true
}

// HasSegments returns a boolean if a field has been set.
func (o *InlineObject4EmbeddingVideoEmbedding) HasSegments() bool {
	if o != nil && !IsNil(o.Segments) {
		return true
	}

	return false
}

// SetSegments gets a reference to the given []VideoSegment and assigns it to the Segments field.
func (o *InlineObject4EmbeddingVideoEmbedding) SetSegments(v []VideoSegment) {
	o.Segments = v
}

func (o InlineObject4EmbeddingVideoEmbedding) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineObject4EmbeddingVideoEmbedding) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Segments) {
		toSerialize["segments"] = o.Segments
	}
	return toSerialize, nil
}

type NullableInlineObject4EmbeddingVideoEmbedding struct {
	value *InlineObject4EmbeddingVideoEmbedding
	isSet bool
}

func (v NullableInlineObject4EmbeddingVideoEmbedding) Get() *InlineObject4EmbeddingVideoEmbedding {
	return v.value
}

func (v *NullableInlineObject4EmbeddingVideoEmbedding) Set(val *InlineObject4EmbeddingVideoEmbedding) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject4EmbeddingVideoEmbedding) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject4EmbeddingVideoEmbedding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject4EmbeddingVideoEmbedding(val *InlineObject4EmbeddingVideoEmbedding) *NullableInlineObject4EmbeddingVideoEmbedding {
	return &NullableInlineObject4EmbeddingVideoEmbedding{value: val, isSet: true}
}

func (v NullableInlineObject4EmbeddingVideoEmbedding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject4EmbeddingVideoEmbedding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


