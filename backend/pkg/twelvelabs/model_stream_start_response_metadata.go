/*
TwelveLabs Video Understanding API

Use the TwelveLabs Video Understanding API to extract information from your videos and make it available to your applications. The API is organized around REST and returns responses in the JSON format. It is compatible with most programming languages, and you can also use Postman or other REST clients to send requests and view responses. 

API version: 1.3.0
Contact: support@twelvelabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twelvelabs

import (
	"encoding/json"
)

// checks if the StreamStartResponseMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamStartResponseMetadata{}

// StreamStartResponseMetadata An object containing metadata about the stream.
type StreamStartResponseMetadata struct {
	// A unique identifier for the generation session. 
	GenerationId *string `json:"generation_id,omitempty"`
}

// NewStreamStartResponseMetadata instantiates a new StreamStartResponseMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamStartResponseMetadata() *StreamStartResponseMetadata {
	this := StreamStartResponseMetadata{}
	return &this
}

// NewStreamStartResponseMetadataWithDefaults instantiates a new StreamStartResponseMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamStartResponseMetadataWithDefaults() *StreamStartResponseMetadata {
	this := StreamStartResponseMetadata{}
	return &this
}

// GetGenerationId returns the GenerationId field value if set, zero value otherwise.
func (o *StreamStartResponseMetadata) GetGenerationId() string {
	if o == nil || IsNil(o.GenerationId) {
		var ret string
		return ret
	}
	return *o.GenerationId
}

// GetGenerationIdOk returns a tuple with the GenerationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamStartResponseMetadata) GetGenerationIdOk() (*string, bool) {
	if o == nil || IsNil(o.GenerationId) {
		return nil, false
	}
	return o.GenerationId, true
}

// HasGenerationId returns a boolean if a field has been set.
func (o *StreamStartResponseMetadata) HasGenerationId() bool {
	if o != nil && !IsNil(o.GenerationId) {
		return true
	}

	return false
}

// SetGenerationId gets a reference to the given string and assigns it to the GenerationId field.
func (o *StreamStartResponseMetadata) SetGenerationId(v string) {
	o.GenerationId = &v
}

func (o StreamStartResponseMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StreamStartResponseMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GenerationId) {
		toSerialize["generation_id"] = o.GenerationId
	}
	return toSerialize, nil
}

type NullableStreamStartResponseMetadata struct {
	value *StreamStartResponseMetadata
	isSet bool
}

func (v NullableStreamStartResponseMetadata) Get() *StreamStartResponseMetadata {
	return v.value
}

func (v *NullableStreamStartResponseMetadata) Set(val *StreamStartResponseMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamStartResponseMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamStartResponseMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamStartResponseMetadata(val *StreamStartResponseMetadata) *NullableStreamStartResponseMetadata {
	return &NullableStreamStartResponseMetadata{value: val, isSet: true}
}

func (v NullableStreamStartResponseMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamStartResponseMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


