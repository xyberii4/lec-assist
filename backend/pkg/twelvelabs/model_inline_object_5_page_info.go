/*
TwelveLabs Video Understanding API

Use the TwelveLabs Video Understanding API to extract information from your videos and make it available to your applications. The API is organized around REST and returns responses in the JSON format. It is compatible with most programming languages, and you can also use Postman or other REST clients to send requests and view responses. 

API version: 1.3.0
Contact: support@twelvelabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twelvelabs

import (
	"encoding/json"
)

// checks if the InlineObject5PageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineObject5PageInfo{}

// InlineObject5PageInfo An object that provides information about pagination. 
type InlineObject5PageInfo struct {
	// The maximum number of items on each page.
	LimitPerPage *int32 `json:"limit_per_page,omitempty"`
	// The page you retrieved.
	Page *int32 `json:"page,omitempty"`
	// The total number of pages.
	TotalPage *int32 `json:"total_page,omitempty"`
	// The total number of results.
	TotalResults *int32 `json:"total_results,omitempty"`
}

// NewInlineObject5PageInfo instantiates a new InlineObject5PageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject5PageInfo() *InlineObject5PageInfo {
	this := InlineObject5PageInfo{}
	return &this
}

// NewInlineObject5PageInfoWithDefaults instantiates a new InlineObject5PageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject5PageInfoWithDefaults() *InlineObject5PageInfo {
	this := InlineObject5PageInfo{}
	return &this
}

// GetLimitPerPage returns the LimitPerPage field value if set, zero value otherwise.
func (o *InlineObject5PageInfo) GetLimitPerPage() int32 {
	if o == nil || IsNil(o.LimitPerPage) {
		var ret int32
		return ret
	}
	return *o.LimitPerPage
}

// GetLimitPerPageOk returns a tuple with the LimitPerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject5PageInfo) GetLimitPerPageOk() (*int32, bool) {
	if o == nil || IsNil(o.LimitPerPage) {
		return nil, false
	}
	return o.LimitPerPage, true
}

// HasLimitPerPage returns a boolean if a field has been set.
func (o *InlineObject5PageInfo) HasLimitPerPage() bool {
	if o != nil && !IsNil(o.LimitPerPage) {
		return true
	}

	return false
}

// SetLimitPerPage gets a reference to the given int32 and assigns it to the LimitPerPage field.
func (o *InlineObject5PageInfo) SetLimitPerPage(v int32) {
	o.LimitPerPage = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *InlineObject5PageInfo) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject5PageInfo) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *InlineObject5PageInfo) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *InlineObject5PageInfo) SetPage(v int32) {
	o.Page = &v
}

// GetTotalPage returns the TotalPage field value if set, zero value otherwise.
func (o *InlineObject5PageInfo) GetTotalPage() int32 {
	if o == nil || IsNil(o.TotalPage) {
		var ret int32
		return ret
	}
	return *o.TotalPage
}

// GetTotalPageOk returns a tuple with the TotalPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject5PageInfo) GetTotalPageOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPage) {
		return nil, false
	}
	return o.TotalPage, true
}

// HasTotalPage returns a boolean if a field has been set.
func (o *InlineObject5PageInfo) HasTotalPage() bool {
	if o != nil && !IsNil(o.TotalPage) {
		return true
	}

	return false
}

// SetTotalPage gets a reference to the given int32 and assigns it to the TotalPage field.
func (o *InlineObject5PageInfo) SetTotalPage(v int32) {
	o.TotalPage = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *InlineObject5PageInfo) GetTotalResults() int32 {
	if o == nil || IsNil(o.TotalResults) {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject5PageInfo) GetTotalResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalResults) {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *InlineObject5PageInfo) HasTotalResults() bool {
	if o != nil && !IsNil(o.TotalResults) {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *InlineObject5PageInfo) SetTotalResults(v int32) {
	o.TotalResults = &v
}

func (o InlineObject5PageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineObject5PageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LimitPerPage) {
		toSerialize["limit_per_page"] = o.LimitPerPage
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.TotalPage) {
		toSerialize["total_page"] = o.TotalPage
	}
	if !IsNil(o.TotalResults) {
		toSerialize["total_results"] = o.TotalResults
	}
	return toSerialize, nil
}

type NullableInlineObject5PageInfo struct {
	value *InlineObject5PageInfo
	isSet bool
}

func (v NullableInlineObject5PageInfo) Get() *InlineObject5PageInfo {
	return v.value
}

func (v *NullableInlineObject5PageInfo) Set(val *InlineObject5PageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject5PageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject5PageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject5PageInfo(val *InlineObject5PageInfo) *NullableInlineObject5PageInfo {
	return &NullableInlineObject5PageInfo{value: val, isSet: true}
}

func (v NullableInlineObject5PageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject5PageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


