/*
TwelveLabs Video Understanding API

Use the TwelveLabs Video Understanding API to extract information from your videos and make it available to your applications. The API is organized around REST and returns responses in the JSON format. It is compatible with most programming languages, and you can also use Postman or other REST clients to send requests and view responses. 

API version: 1.3.0
Contact: support@twelvelabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twelvelabs

import (
	"encoding/json"
)

// checks if the InlineObject6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineObject6{}

// InlineObject6 struct for InlineObject6
type InlineObject6 struct {
	// A string representing the unique identifier of the task. It is assigned by the platform when a new task is created. 
	Id *string `json:"_id,omitempty"`
	// A string representing the unique identifier of the video associated with the specified video indexing task. 
	VideoId *string `json:"video_id,omitempty"`
	// A string indicating the date and time, in the RFC RFC 3339 format (\"YYYY-MM-DDTHH:mm:ssZ\"), that the task was created. 
	CreatedAt *string `json:"created_at,omitempty"`
	// A string indicating the date and time, in the RFC RFC 3339 format (\"YYYY-MM-DDTHH:mm:ssZ\"), that the task object was last updated. The platform updates this field every time the video indexing task transitions to a different state. 
	UpdatedAt *string `json:"updated_at,omitempty"`
	// A string indicating the status of the video indexing task. See the [Task object](/v1.3/api-reference/tasks/the-task-object) page for a list of possible statuses. 
	Status *string `json:"status,omitempty"`
	// A string representing the unique identifier of the index to which the video must be uploaded. 
	IndexId *string `json:"index_id,omitempty"`
	SystemMetadata *VideoIndexingTaskSystemMetadata `json:"system_metadata,omitempty"`
	Hls *HLSObject `json:"hls,omitempty"`
}

// NewInlineObject6 instantiates a new InlineObject6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject6() *InlineObject6 {
	this := InlineObject6{}
	return &this
}

// NewInlineObject6WithDefaults instantiates a new InlineObject6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject6WithDefaults() *InlineObject6 {
	this := InlineObject6{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineObject6) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject6) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineObject6) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineObject6) SetId(v string) {
	o.Id = &v
}

// GetVideoId returns the VideoId field value if set, zero value otherwise.
func (o *InlineObject6) GetVideoId() string {
	if o == nil || IsNil(o.VideoId) {
		var ret string
		return ret
	}
	return *o.VideoId
}

// GetVideoIdOk returns a tuple with the VideoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject6) GetVideoIdOk() (*string, bool) {
	if o == nil || IsNil(o.VideoId) {
		return nil, false
	}
	return o.VideoId, true
}

// HasVideoId returns a boolean if a field has been set.
func (o *InlineObject6) HasVideoId() bool {
	if o != nil && !IsNil(o.VideoId) {
		return true
	}

	return false
}

// SetVideoId gets a reference to the given string and assigns it to the VideoId field.
func (o *InlineObject6) SetVideoId(v string) {
	o.VideoId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InlineObject6) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject6) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InlineObject6) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *InlineObject6) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *InlineObject6) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject6) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *InlineObject6) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *InlineObject6) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineObject6) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject6) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineObject6) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineObject6) SetStatus(v string) {
	o.Status = &v
}

// GetIndexId returns the IndexId field value if set, zero value otherwise.
func (o *InlineObject6) GetIndexId() string {
	if o == nil || IsNil(o.IndexId) {
		var ret string
		return ret
	}
	return *o.IndexId
}

// GetIndexIdOk returns a tuple with the IndexId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject6) GetIndexIdOk() (*string, bool) {
	if o == nil || IsNil(o.IndexId) {
		return nil, false
	}
	return o.IndexId, true
}

// HasIndexId returns a boolean if a field has been set.
func (o *InlineObject6) HasIndexId() bool {
	if o != nil && !IsNil(o.IndexId) {
		return true
	}

	return false
}

// SetIndexId gets a reference to the given string and assigns it to the IndexId field.
func (o *InlineObject6) SetIndexId(v string) {
	o.IndexId = &v
}

// GetSystemMetadata returns the SystemMetadata field value if set, zero value otherwise.
func (o *InlineObject6) GetSystemMetadata() VideoIndexingTaskSystemMetadata {
	if o == nil || IsNil(o.SystemMetadata) {
		var ret VideoIndexingTaskSystemMetadata
		return ret
	}
	return *o.SystemMetadata
}

// GetSystemMetadataOk returns a tuple with the SystemMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject6) GetSystemMetadataOk() (*VideoIndexingTaskSystemMetadata, bool) {
	if o == nil || IsNil(o.SystemMetadata) {
		return nil, false
	}
	return o.SystemMetadata, true
}

// HasSystemMetadata returns a boolean if a field has been set.
func (o *InlineObject6) HasSystemMetadata() bool {
	if o != nil && !IsNil(o.SystemMetadata) {
		return true
	}

	return false
}

// SetSystemMetadata gets a reference to the given VideoIndexingTaskSystemMetadata and assigns it to the SystemMetadata field.
func (o *InlineObject6) SetSystemMetadata(v VideoIndexingTaskSystemMetadata) {
	o.SystemMetadata = &v
}

// GetHls returns the Hls field value if set, zero value otherwise.
func (o *InlineObject6) GetHls() HLSObject {
	if o == nil || IsNil(o.Hls) {
		var ret HLSObject
		return ret
	}
	return *o.Hls
}

// GetHlsOk returns a tuple with the Hls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject6) GetHlsOk() (*HLSObject, bool) {
	if o == nil || IsNil(o.Hls) {
		return nil, false
	}
	return o.Hls, true
}

// HasHls returns a boolean if a field has been set.
func (o *InlineObject6) HasHls() bool {
	if o != nil && !IsNil(o.Hls) {
		return true
	}

	return false
}

// SetHls gets a reference to the given HLSObject and assigns it to the Hls field.
func (o *InlineObject6) SetHls(v HLSObject) {
	o.Hls = &v
}

func (o InlineObject6) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineObject6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["_id"] = o.Id
	}
	if !IsNil(o.VideoId) {
		toSerialize["video_id"] = o.VideoId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.IndexId) {
		toSerialize["index_id"] = o.IndexId
	}
	if !IsNil(o.SystemMetadata) {
		toSerialize["system_metadata"] = o.SystemMetadata
	}
	if !IsNil(o.Hls) {
		toSerialize["hls"] = o.Hls
	}
	return toSerialize, nil
}

type NullableInlineObject6 struct {
	value *InlineObject6
	isSet bool
}

func (v NullableInlineObject6) Get() *InlineObject6 {
	return v.value
}

func (v *NullableInlineObject6) Set(val *InlineObject6) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject6) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject6(val *InlineObject6) *NullableInlineObject6 {
	return &NullableInlineObject6{value: val, isSet: true}
}

func (v NullableInlineObject6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


